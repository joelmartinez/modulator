@inherits Chloroplast.Core.Rendering.ChloroplastTemplateBase<Chloroplast.Core.Rendering.FrameRenderedContent>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@Model.GetMeta("Title")</title>
    <link href="@Asset("/assets/main.css")" rel="stylesheet" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
</head>
<body>
    <header>
        <div class="container">
            <h1><a href="@Href("/")">MODULATOR LIBRARY</a></h1>
        </div>
    </header>

    @Raw(Model.Body)

    <footer>
        <div class="container">
            <nav style="text-align: center; margin-bottom: 1rem;">
                <a href="@Href("/")" class="nav-link" style="display: inline-block; margin: 0 1rem;">Home</a>
                <a href="https://github.com/joelmartinez/modulator" class="nav-link" style="display: inline-block; margin: 0 1rem;">GitHub</a>
                <a href="https://codecube.net" class="nav-link" style="display: inline-block; margin: 0 1rem;">Maintainer</a>
            </nav>
            <p style="text-align: center; color: var(--text-secondary); margin: 0;">
                Made with ♥ by <a href="https://codecube.net" style="color: var(--text-accent);">Joel Martinez</a>
            </p>
            <p style="text-align: center; color: var(--text-secondary); margin: 0.5rem 0 0 0; font-size: 0.9rem;">
                Copyright 2024 Joel Martinez
            </p>
        </div>
    </footer>

    <!-- Waveform Visualizer for modulation examples -->
    <script src="@Asset("/assets/waveform-visualizer.js")" type="text/javascript"></script>
    
    <!-- Generic initialization for all waveform visualizations -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Find all canvas elements with the waveform-visualization class
        const canvases = document.querySelectorAll('canvas.waveform-visualization');
        
        // Get the base path for assets from a global variable we'll set
        const assetsBasePath = '@Href("/assets/samples/")';
        const assetCacheBust = Math.floor(Date.now() / (60 * 60 * 1000)).toString();

        canvases.forEach(canvas => {
            const sampleFile = canvas.dataset.sample;
            if (sampleFile && canvas.id) {
                try {
                    const visualizer = new WaveformVisualizer(canvas.id, {
                        width: 800, 
                        height: 300,
                        backgroundColor: 'rgba(255, 255, 255, 0.04)',
                        gridColor: 'rgba(255, 255, 255, 0.1)',
                        axisColor: '#e8e4d8',
                        waveformColor: '#d4c389'
                    });
                    // Use the assets base path with the sample file
                    visualizer.loadData(assetsBasePath + sampleFile + '?v=' + assetCacheBust);
                } catch (error) {
                    console.error('Failed to initialize visualizer for canvas:', canvas.id, error);
                }
            }
        });
    });
    </script>
</body>
</html>